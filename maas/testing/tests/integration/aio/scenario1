{
    "AIO": {
        "active_suppressions": [],
        "checks": {
            "cinder_api_local_check--AIO_cinder_api_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "cinder_api_local_status--AIO_cinder_api_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"cinder_api_local_status\",\"filename\":\"cinder_api_local_check--AIO_cinder_api_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"cinder_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"cinder_api_local_check--AIO_cinder_api_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "cinder_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "cinder_api_local_response_time": {
                        "name": "cinder_api_local_response_time",
                        "unit": "ms"
                    },
                    "cinder_api_local_status": {
                        "name": "cinder_api_local_status",
                        "unit": "unknown"
                    },
                    "cinder_available_snaps": {
                        "name": "cinder_available_snaps",
                        "unit": "snapshots"
                    },
                    "cinder_available_volumes": {
                        "name": "cinder_available_volumes",
                        "unit": "volumes"
                    },
                    "cinder_error_snaps": {
                        "name": "cinder_error_snaps",
                        "unit": "snapshots"
                    },
                    "cinder_error_volumes": {
                        "name": "cinder_error_volumes",
                        "unit": "volumes"
                    },
                    "cinder_in-use_snaps": {
                        "name": "cinder_in-use_snaps",
                        "unit": "snapshots"
                    },
                    "cinder_in-use_volumes": {
                        "name": "cinder_in-use_volumes",
                        "unit": "volumes"
                    },
                    "total_cinder_snapshots": {
                        "name": "total_cinder_snapshots",
                        "unit": "snapshots"
                    },
                    "total_cinder_volumes": {
                        "name": "total_cinder_volumes",
                        "unit": "volumes"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "cinder_scheduler_check--AIO_cinder_scheduler_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "cinder_scheduler_status--AIO_cinder_scheduler_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"cinder_scheduler_status\",\"filename\":\"cinder_scheduler_check--AIO_cinder_scheduler_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"cinder-scheduler_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"cinder-scheduler down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"cinder_scheduler_check--AIO_cinder_scheduler_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_cinder_scheduler_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "cinder_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "cinder-scheduler_status": {
                        "name": "cinder-scheduler_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "cinder_vg_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "cinder_vg_space_status--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"cinder_vg_space_status\",\"filename\":\"cinder_vg_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"cinder-volumes_vg_used_space\"], metric[\"cinder-volumes_vg_total_space\"]) > 90.0) {\n    return new AlarmStatus(CRITICAL, \"space in the cinder-volumes vg on this host is more than 90.0% used\");\n}\nif (percentage(metric[\"cinder-volumes_vg_used_space\"], metric[\"cinder-volumes_vg_total_space\"]) > 80.0) {\n    return new AlarmStatus(WARNING, \"space in the cinder-volumes vg on this host is more than 80.0% used\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"cinder_vg_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "cinder-volumes"
                    ],
                    "file": "vg_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "cinder-volumes_vg_free_space": {
                        "name": "cinder-volumes_vg_free_space",
                        "unit": "megabytes"
                    },
                    "cinder-volumes_vg_total_space": {
                        "name": "cinder-volumes_vg_total_space",
                        "unit": "megabytes"
                    },
                    "cinder-volumes_vg_used_space": {
                        "name": "cinder-volumes_vg_used_space",
                        "unit": "megabytes"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "cinder_volume_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "cinder_volume_status--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"cinder_volume_status\",\"filename\":\"cinder_volume_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"cinder-volume_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"cinder-volume down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"cinder_volume_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO",
                        "IP_ADDRESS"
                    ],
                    "file": "cinder_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "cinder-backup_status": {
                        "name": "cinder-backup_status",
                        "unit": "unknown"
                    },
                    "cinder-volume_status": {
                        "name": "cinder-volume_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "conntrack_count--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "conntrack_count_status--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"conntrack_count_status\",\"filename\":\"conntrack_count--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"nf_conntrack_count\"] , metric[\"nf_conntrack_max\"]) > 90) {\n    return new AlarmStatus(CRITICAL, \"Connection count is > 90% of maximum allowed.\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"conntrack_count--AIO.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "conntrack_count.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "nf_conntrack_count": {
                        "name": "nf_conntrack_count",
                        "unit": "unknown"
                    },
                    "nf_conntrack_max": {
                        "name": "nf_conntrack_max",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "cpu_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "idle_percent_average--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"idle_percent_average\",\"filename\":\"cpu_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"idle_percent_average\"] <= 10.0) {\n    return new AlarmStatus(WARNING, \"CPU time spent idle has dropped to <= 10.0%\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"cpu_check--AIO.yaml\"}",
                "details": {},
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "cpu_count": {
                        "name": "cpu_count",
                        "unit": "count"
                    },
                    "idle_percent_average": {
                        "name": "idle_percent_average",
                        "unit": "percent"
                    },
                    "irq_percent_average": {
                        "name": "irq_percent_average",
                        "unit": "percent"
                    },
                    "max_cpu_usage": {
                        "name": "max_cpu_usage",
                        "unit": "percent"
                    },
                    "min_cpu_usage": {
                        "name": "min_cpu_usage",
                        "unit": "percent"
                    },
                    "stolen_percent_average": {
                        "name": "stolen_percent_average",
                        "unit": "percent"
                    },
                    "sys_percent_average": {
                        "name": "sys_percent_average",
                        "unit": "percent"
                    },
                    "usage_average": {
                        "name": "usage_average",
                        "unit": "percent"
                    },
                    "user_percent_average": {
                        "name": "user_percent_average",
                        "unit": "percent"
                    },
                    "wait_percent_average": {
                        "name": "wait_percent_average",
                        "unit": "percent"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.cpu"
            },
            "disk_utilisation--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "percentage_disk_utilisation_xvda--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"percentage_disk_utilisation_xvda\",\"filename\":\"disk_utilisation--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"disk_utilisation_xvda\"] > 90) {\n    return new AlarmStatus(CRITICAL, \"Disk utilisation for xvda >= 90%\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "percentage_disk_utilisation_xvde--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"percentage_disk_utilisation_xvde\",\"filename\":\"disk_utilisation--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"disk_utilisation_xvde\"] > 90) {\n    return new AlarmStatus(CRITICAL, \"Disk utilisation for xvde >= 90%\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"disk_utilisation--AIO.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "disk_utilisation.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "disk_utilisation_xvda": {
                        "name": "disk_utilisation_xvda",
                        "unit": "%"
                    },
                    "disk_utilisation_xvde": {
                        "name": "disk_utilisation_xvde",
                        "unit": "%"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "filesystem_/--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "Disk space used on /--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"filesystem_/_check\",\"filename\":\"filesystem_.--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric['used'], metric['total']) >= 90.0) {\n    return new AlarmStatus(CRITICAL, \"/ filesystem is >= 90.0% full.\");\n}\nif (percentage(metric['used'], metric['total']) >= 80.0) {\n    return new AlarmStatus(WARNING, \"/ filesystem is >= 80.0% full.\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"filesystem_.--AIO.yaml\"}",
                "details": {
                    "target": "/"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "avail": {
                        "name": "avail",
                        "unit": "kilobytes"
                    },
                    "files": {
                        "name": "files",
                        "unit": "files"
                    },
                    "free": {
                        "name": "free",
                        "unit": "kilobytes"
                    },
                    "free_files": {
                        "name": "free_files",
                        "unit": "free_files"
                    },
                    "options": {
                        "name": "options",
                        "unit": "options"
                    },
                    "total": {
                        "name": "total",
                        "unit": "kilobytes"
                    },
                    "used": {
                        "name": "used",
                        "unit": "kilobytes"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.filesystem"
            },
            "filesystem_/srv/swift1.img--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "Disk space used on /srv/swift1.img--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"filesystem_/srv/swift1.img_check\",\"filename\":\"filesystem_.srv.swift1.img--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric['used'], metric['total']) >= 90.0) {\n    return new AlarmStatus(CRITICAL, \"/srv/swift1.img filesystem is >= 90.0% full.\");\n}\nif (percentage(metric['used'], metric['total']) >= 80.0) {\n    return new AlarmStatus(WARNING, \"/srv/swift1.img filesystem is >= 80.0% full.\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"filesystem_.srv.swift1.img--AIO.yaml\"}",
                "details": {
                    "target": "/srv/swift1.img"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "avail": {
                        "name": "avail",
                        "unit": "kilobytes"
                    },
                    "files": {
                        "name": "files",
                        "unit": "files"
                    },
                    "free": {
                        "name": "free",
                        "unit": "kilobytes"
                    },
                    "free_files": {
                        "name": "free_files",
                        "unit": "free_files"
                    },
                    "options": {
                        "name": "options",
                        "unit": "options"
                    },
                    "total": {
                        "name": "total",
                        "unit": "kilobytes"
                    },
                    "used": {
                        "name": "used",
                        "unit": "kilobytes"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.filesystem"
            },
            "filesystem_/srv/swift2.img--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "Disk space used on /srv/swift2.img--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"filesystem_/srv/swift2.img_check\",\"filename\":\"filesystem_.srv.swift2.img--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric['used'], metric['total']) >= 90.0) {\n    return new AlarmStatus(CRITICAL, \"/srv/swift2.img filesystem is >= 90.0% full.\");\n}\nif (percentage(metric['used'], metric['total']) >= 80.0) {\n    return new AlarmStatus(WARNING, \"/srv/swift2.img filesystem is >= 80.0% full.\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"filesystem_.srv.swift2.img--AIO.yaml\"}",
                "details": {
                    "target": "/srv/swift2.img"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "avail": {
                        "name": "avail",
                        "unit": "kilobytes"
                    },
                    "files": {
                        "name": "files",
                        "unit": "files"
                    },
                    "free": {
                        "name": "free",
                        "unit": "kilobytes"
                    },
                    "free_files": {
                        "name": "free_files",
                        "unit": "free_files"
                    },
                    "options": {
                        "name": "options",
                        "unit": "options"
                    },
                    "total": {
                        "name": "total",
                        "unit": "kilobytes"
                    },
                    "used": {
                        "name": "used",
                        "unit": "kilobytes"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.filesystem"
            },
            "filesystem_/srv/swift3.img--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "Disk space used on /srv/swift3.img--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"filesystem_/srv/swift3.img_check\",\"filename\":\"filesystem_.srv.swift3.img--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric['used'], metric['total']) >= 90.0) {\n    return new AlarmStatus(CRITICAL, \"/srv/swift3.img filesystem is >= 90.0% full.\");\n}\nif (percentage(metric['used'], metric['total']) >= 80.0) {\n    return new AlarmStatus(WARNING, \"/srv/swift3.img filesystem is >= 80.0% full.\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"filesystem_.srv.swift3.img--AIO.yaml\"}",
                "details": {
                    "target": "/srv/swift3.img"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "avail": {
                        "name": "avail",
                        "unit": "kilobytes"
                    },
                    "files": {
                        "name": "files",
                        "unit": "files"
                    },
                    "free": {
                        "name": "free",
                        "unit": "kilobytes"
                    },
                    "free_files": {
                        "name": "free_files",
                        "unit": "free_files"
                    },
                    "options": {
                        "name": "options",
                        "unit": "options"
                    },
                    "total": {
                        "name": "total",
                        "unit": "kilobytes"
                    },
                    "used": {
                        "name": "used",
                        "unit": "kilobytes"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.filesystem"
            },
            "galera_check--AIO_galera_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "percentage_used_mysql_connections--AIO_galera_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"percentage_used_mysql_connections\",\"filename\":\"galera_check--AIO_galera_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"mysql_current_connections\"], metric[\"mysql_max_configured_connections\"]) > 90 ) {\n    return new AlarmStatus(CRITICAL, \"Mysql connectons has exceeded 90% of configured maximum\");\n}\nif (percentage(metric[\"mysql_current_connections\"], metric[\"mysql_max_configured_connections\"]) > 80 ) {\n    return new AlarmStatus(WARNING, \"Mysql connectons has exceeded 80% of configured maximum\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "wsrep_cluster_size--AIO_galera_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"wsrep_cluster_size\",\"filename\":\"galera_check--AIO_galera_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"wsrep_cluster_size\"] < 3) {\n    return new AlarmStatus(CRITICAL, \"Galera cluster size less than expected\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "wsrep_local_state--AIO_galera_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"wsrep_local_state\",\"filename\":\"galera_check--AIO_galera_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"wsrep_local_state_comment\"] != \"Synced\" ) {\n    return new AlarmStatus(CRITICAL, \"Galera cluster node not synced\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"galera_check--AIO_galera_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "-H",
                        "IP_ADDRESS"
                    ],
                    "file": "galera_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "mysql_current_connections": {
                        "name": "mysql_current_connections",
                        "unit": "connections"
                    },
                    "mysql_max_configured_connections": {
                        "name": "mysql_max_configured_connections",
                        "unit": "connections"
                    },
                    "mysql_max_seen_connections": {
                        "name": "mysql_max_seen_connections",
                        "unit": "connections"
                    },
                    "queries_per_second": {
                        "name": "queries_per_second",
                        "unit": "qps"
                    },
                    "wsrep_cluster_size": {
                        "name": "wsrep_cluster_size",
                        "unit": "nodes"
                    },
                    "wsrep_cluster_state_uuid": {
                        "name": "wsrep_cluster_state_uuid",
                        "unit": "unknown"
                    },
                    "wsrep_cluster_status": {
                        "name": "wsrep_cluster_status",
                        "unit": "unknown"
                    },
                    "wsrep_commit_window_size": {
                        "name": "wsrep_commit_window_size",
                        "unit": "sequence_delta"
                    },
                    "wsrep_local_state_comment": {
                        "name": "wsrep_local_state_comment",
                        "unit": "unknown"
                    },
                    "wsrep_local_state_uuid": {
                        "name": "wsrep_local_state_uuid",
                        "unit": "unknown"
                    },
                    "wsrep_received_bytes": {
                        "name": "wsrep_received_bytes",
                        "unit": "bytes"
                    },
                    "wsrep_replicated_bytes": {
                        "name": "wsrep_replicated_bytes",
                        "unit": "bytes"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "glance_api_local_check--AIO_glance_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "glance_api_local_status--AIO_glance_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"glance_api_local_status\",\"filename\":\"glance_api_local_check--AIO_glance_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"glance_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"glance_api_local_check--AIO_glance_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "glance_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "glance_active_images": {
                        "name": "glance_active_images",
                        "unit": "images"
                    },
                    "glance_api_local_response_time": {
                        "name": "glance_api_local_response_time",
                        "unit": "ms"
                    },
                    "glance_api_local_status": {
                        "name": "glance_api_local_status",
                        "unit": "unknown"
                    },
                    "glance_killed_images": {
                        "name": "glance_killed_images",
                        "unit": "images"
                    },
                    "glance_queued_images": {
                        "name": "glance_queued_images",
                        "unit": "images"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "glance_registry_local_check--AIO_glance_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "glance_registry_local_status--AIO_glance_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"glance_registry_local_status\",\"filename\":\"glance_registry_local_check--AIO_glance_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"glance_registry_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"glance_registry_local_check--AIO_glance_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "glance_registry_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "glance_registry_local_response_time": {
                        "name": "glance_registry_local_response_time",
                        "unit": "ms"
                    },
                    "glance_registry_local_status": {
                        "name": "glance_registry_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "heat_api_local_check--AIO_heat_apis_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "heat_api_local_status--AIO_heat_apis_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"heat_api_local_status\",\"filename\":\"heat_api_local_check--AIO_heat_apis_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"heat_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"heat_api_local_check--AIO_heat_apis_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "heat_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "heat_api_local_response_time": {
                        "name": "heat_api_local_response_time",
                        "unit": "ms"
                    },
                    "heat_api_local_status": {
                        "name": "heat_api_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "heat_cfn_api_check--AIO_heat_apis_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "heat_cfn_api_local_status--AIO_heat_apis_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"heat_cfn_api_local_status\",\"filename\":\"heat_cfn_api_check--AIO_heat_apis_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"heat_cfn_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"heat_cfn_api_check--AIO_heat_apis_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "heat_cfn",
                        "IP_ADDRESS",
                        "8000"
                    ],
                    "file": "service_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "heat_cfn_api_local_response_time": {
                        "name": "heat_cfn_api_local_response_time",
                        "unit": "ms"
                    },
                    "heat_cfn_api_local_status": {
                        "name": "heat_cfn_api_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "heat_cw_api_check--AIO_heat_apis_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "heat_cw_api_local_status--AIO_heat_apis_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"heat_cw_api_local_status\",\"filename\":\"heat_cw_api_check--AIO_heat_apis_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"heat_cw_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"heat_cw_api_check--AIO_heat_apis_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "heat_cw",
                        "IP_ADDRESS",
                        "8003"
                    ],
                    "file": "service_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "heat_cw_api_local_response_time": {
                        "name": "heat_cw_api_local_response_time",
                        "unit": "ms"
                    },
                    "heat_cw_api_local_status": {
                        "name": "heat_cw_api_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "horizon_local_check--AIO_horizon_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "horizon_local_status--AIO_horizon_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"horizon_local_status\",\"filename\":\"horizon_local_check--AIO_horizon_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"horizon_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"Horizon unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"horizon_local_check--AIO_horizon_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "horizon_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "horizon_local_status": {
                        "name": "horizon_local_status",
                        "unit": "unknown"
                    },
                    "login_milliseconds": {
                        "name": "login_milliseconds",
                        "unit": "ms"
                    },
                    "login_status_code": {
                        "name": "login_status_code",
                        "unit": "http_code"
                    },
                    "splash_milliseconds": {
                        "name": "splash_milliseconds",
                        "unit": "ms"
                    },
                    "splash_status_code": {
                        "name": "splash_status_code",
                        "unit": "http_code"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "keystone_api_local_check--AIO_keystone_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "keystone_api_local_status--AIO_keystone_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"keystone_api_local_status\",\"filename\":\"keystone_api_local_check--AIO_keystone_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"keystone_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"keystone_api_local_check--AIO_keystone_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "keystone_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "keystone_api_local_response_time": {
                        "name": "keystone_api_local_response_time",
                        "unit": "ms"
                    },
                    "keystone_api_local_status": {
                        "name": "keystone_api_local_status",
                        "unit": "unknown"
                    },
                    "keystone_tenant_count": {
                        "name": "keystone_tenant_count",
                        "unit": "tenants"
                    },
                    "keystone_user_count": {
                        "name": "keystone_user_count",
                        "unit": "users"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "lb_api_check_cinder--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_cinder": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_cinder\",\"filename\":\"lb_api_check_cinder.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '200') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_cinder.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "http://IP_ADDRESS:8776"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "mzdfw.bytes": {
                        "name": "mzdfw.bytes",
                        "unit": "bytes"
                    },
                    "mzdfw.code": {
                        "name": "mzdfw.code",
                        "unit": "unknown"
                    },
                    "mzdfw.duration": {
                        "name": "mzdfw.duration",
                        "unit": "milliseconds"
                    },
                    "mzdfw.truncated": {
                        "name": "mzdfw.truncated",
                        "unit": "bytes"
                    },
                    "mzdfw.tt_connect": {
                        "name": "mzdfw.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzdfw.tt_firstbyte": {
                        "name": "mzdfw.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzhkg.bytes": {
                        "name": "mzhkg.bytes",
                        "unit": "bytes"
                    },
                    "mzhkg.code": {
                        "name": "mzhkg.code",
                        "unit": "unknown"
                    },
                    "mzhkg.duration": {
                        "name": "mzhkg.duration",
                        "unit": "milliseconds"
                    },
                    "mzhkg.truncated": {
                        "name": "mzhkg.truncated",
                        "unit": "bytes"
                    },
                    "mzhkg.tt_connect": {
                        "name": "mzhkg.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzhkg.tt_firstbyte": {
                        "name": "mzhkg.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mziad.bytes": {
                        "name": "mziad.bytes",
                        "unit": "bytes"
                    },
                    "mziad.code": {
                        "name": "mziad.code",
                        "unit": "unknown"
                    },
                    "mziad.duration": {
                        "name": "mziad.duration",
                        "unit": "milliseconds"
                    },
                    "mziad.truncated": {
                        "name": "mziad.truncated",
                        "unit": "bytes"
                    },
                    "mziad.tt_connect": {
                        "name": "mziad.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mziad.tt_firstbyte": {
                        "name": "mziad.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzlon.bytes": {
                        "name": "mzlon.bytes",
                        "unit": "bytes"
                    },
                    "mzlon.code": {
                        "name": "mzlon.code",
                        "unit": "unknown"
                    },
                    "mzlon.duration": {
                        "name": "mzlon.duration",
                        "unit": "milliseconds"
                    },
                    "mzlon.truncated": {
                        "name": "mzlon.truncated",
                        "unit": "bytes"
                    },
                    "mzlon.tt_connect": {
                        "name": "mzlon.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzlon.tt_firstbyte": {
                        "name": "mzlon.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzord.bytes": {
                        "name": "mzord.bytes",
                        "unit": "bytes"
                    },
                    "mzord.code": {
                        "name": "mzord.code",
                        "unit": "unknown"
                    },
                    "mzord.duration": {
                        "name": "mzord.duration",
                        "unit": "milliseconds"
                    },
                    "mzord.truncated": {
                        "name": "mzord.truncated",
                        "unit": "bytes"
                    },
                    "mzord.tt_connect": {
                        "name": "mzord.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzord.tt_firstbyte": {
                        "name": "mzord.tt_firstbyte",
                        "unit": "milliseconds"
                    }
                },
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "lb_api_check_glance--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_glance": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_glance\",\"filename\":\"lb_api_check_glance.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '300') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_glance.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "http://IP_ADDRESS:9292"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "mzdfw.bytes": {
                        "name": "mzdfw.bytes",
                        "unit": "bytes"
                    },
                    "mzdfw.code": {
                        "name": "mzdfw.code",
                        "unit": "unknown"
                    },
                    "mzdfw.duration": {
                        "name": "mzdfw.duration",
                        "unit": "milliseconds"
                    },
                    "mzdfw.truncated": {
                        "name": "mzdfw.truncated",
                        "unit": "bytes"
                    },
                    "mzdfw.tt_connect": {
                        "name": "mzdfw.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzdfw.tt_firstbyte": {
                        "name": "mzdfw.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzhkg.bytes": {
                        "name": "mzhkg.bytes",
                        "unit": "bytes"
                    },
                    "mzhkg.code": {
                        "name": "mzhkg.code",
                        "unit": "unknown"
                    },
                    "mzhkg.duration": {
                        "name": "mzhkg.duration",
                        "unit": "milliseconds"
                    },
                    "mzhkg.truncated": {
                        "name": "mzhkg.truncated",
                        "unit": "bytes"
                    },
                    "mzhkg.tt_connect": {
                        "name": "mzhkg.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzhkg.tt_firstbyte": {
                        "name": "mzhkg.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mziad.bytes": {
                        "name": "mziad.bytes",
                        "unit": "bytes"
                    },
                    "mziad.code": {
                        "name": "mziad.code",
                        "unit": "unknown"
                    },
                    "mziad.duration": {
                        "name": "mziad.duration",
                        "unit": "milliseconds"
                    },
                    "mziad.truncated": {
                        "name": "mziad.truncated",
                        "unit": "bytes"
                    },
                    "mziad.tt_connect": {
                        "name": "mziad.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mziad.tt_firstbyte": {
                        "name": "mziad.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzlon.bytes": {
                        "name": "mzlon.bytes",
                        "unit": "bytes"
                    },
                    "mzlon.code": {
                        "name": "mzlon.code",
                        "unit": "unknown"
                    },
                    "mzlon.duration": {
                        "name": "mzlon.duration",
                        "unit": "milliseconds"
                    },
                    "mzlon.truncated": {
                        "name": "mzlon.truncated",
                        "unit": "bytes"
                    },
                    "mzlon.tt_connect": {
                        "name": "mzlon.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzlon.tt_firstbyte": {
                        "name": "mzlon.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzord.bytes": {
                        "name": "mzord.bytes",
                        "unit": "bytes"
                    },
                    "mzord.code": {
                        "name": "mzord.code",
                        "unit": "unknown"
                    },
                    "mzord.duration": {
                        "name": "mzord.duration",
                        "unit": "milliseconds"
                    },
                    "mzord.truncated": {
                        "name": "mzord.truncated",
                        "unit": "bytes"
                    },
                    "mzord.tt_connect": {
                        "name": "mzord.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzord.tt_firstbyte": {
                        "name": "mzord.tt_firstbyte",
                        "unit": "milliseconds"
                    }
                },
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "lb_api_check_heat_api--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_heat_api": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_heat_api\",\"filename\":\"lb_api_check_heat_api.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '300') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_heat_api.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "http://IP_ADDRESS:8004"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "mzdfw.bytes": {
                        "name": "mzdfw.bytes",
                        "unit": "bytes"
                    },
                    "mzdfw.code": {
                        "name": "mzdfw.code",
                        "unit": "unknown"
                    },
                    "mzdfw.duration": {
                        "name": "mzdfw.duration",
                        "unit": "milliseconds"
                    },
                    "mzdfw.truncated": {
                        "name": "mzdfw.truncated",
                        "unit": "bytes"
                    },
                    "mzdfw.tt_connect": {
                        "name": "mzdfw.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzdfw.tt_firstbyte": {
                        "name": "mzdfw.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzhkg.bytes": {
                        "name": "mzhkg.bytes",
                        "unit": "bytes"
                    },
                    "mzhkg.code": {
                        "name": "mzhkg.code",
                        "unit": "unknown"
                    },
                    "mzhkg.duration": {
                        "name": "mzhkg.duration",
                        "unit": "milliseconds"
                    },
                    "mzhkg.truncated": {
                        "name": "mzhkg.truncated",
                        "unit": "bytes"
                    },
                    "mzhkg.tt_connect": {
                        "name": "mzhkg.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzhkg.tt_firstbyte": {
                        "name": "mzhkg.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mziad.bytes": {
                        "name": "mziad.bytes",
                        "unit": "bytes"
                    },
                    "mziad.code": {
                        "name": "mziad.code",
                        "unit": "unknown"
                    },
                    "mziad.duration": {
                        "name": "mziad.duration",
                        "unit": "milliseconds"
                    },
                    "mziad.truncated": {
                        "name": "mziad.truncated",
                        "unit": "bytes"
                    },
                    "mziad.tt_connect": {
                        "name": "mziad.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mziad.tt_firstbyte": {
                        "name": "mziad.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzlon.bytes": {
                        "name": "mzlon.bytes",
                        "unit": "bytes"
                    },
                    "mzlon.code": {
                        "name": "mzlon.code",
                        "unit": "unknown"
                    },
                    "mzlon.duration": {
                        "name": "mzlon.duration",
                        "unit": "milliseconds"
                    },
                    "mzlon.truncated": {
                        "name": "mzlon.truncated",
                        "unit": "bytes"
                    },
                    "mzlon.tt_connect": {
                        "name": "mzlon.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzlon.tt_firstbyte": {
                        "name": "mzlon.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzord.bytes": {
                        "name": "mzord.bytes",
                        "unit": "bytes"
                    },
                    "mzord.code": {
                        "name": "mzord.code",
                        "unit": "unknown"
                    },
                    "mzord.duration": {
                        "name": "mzord.duration",
                        "unit": "milliseconds"
                    },
                    "mzord.truncated": {
                        "name": "mzord.truncated",
                        "unit": "bytes"
                    },
                    "mzord.tt_connect": {
                        "name": "mzord.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzord.tt_firstbyte": {
                        "name": "mzord.tt_firstbyte",
                        "unit": "milliseconds"
                    }
                },
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "lb_api_check_heat_cfn--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_heat_cfn": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_heat_cfn\",\"filename\":\"lb_api_check_heat_cfn.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '300') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_heat_cfn.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "http://IP_ADDRESS:8000"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "mzdfw.bytes": {
                        "name": "mzdfw.bytes",
                        "unit": "bytes"
                    },
                    "mzdfw.code": {
                        "name": "mzdfw.code",
                        "unit": "unknown"
                    },
                    "mzdfw.duration": {
                        "name": "mzdfw.duration",
                        "unit": "milliseconds"
                    },
                    "mzdfw.truncated": {
                        "name": "mzdfw.truncated",
                        "unit": "bytes"
                    },
                    "mzdfw.tt_connect": {
                        "name": "mzdfw.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzdfw.tt_firstbyte": {
                        "name": "mzdfw.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzhkg.bytes": {
                        "name": "mzhkg.bytes",
                        "unit": "bytes"
                    },
                    "mzhkg.code": {
                        "name": "mzhkg.code",
                        "unit": "unknown"
                    },
                    "mzhkg.duration": {
                        "name": "mzhkg.duration",
                        "unit": "milliseconds"
                    },
                    "mzhkg.truncated": {
                        "name": "mzhkg.truncated",
                        "unit": "bytes"
                    },
                    "mzhkg.tt_connect": {
                        "name": "mzhkg.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzhkg.tt_firstbyte": {
                        "name": "mzhkg.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mziad.bytes": {
                        "name": "mziad.bytes",
                        "unit": "bytes"
                    },
                    "mziad.code": {
                        "name": "mziad.code",
                        "unit": "unknown"
                    },
                    "mziad.duration": {
                        "name": "mziad.duration",
                        "unit": "milliseconds"
                    },
                    "mziad.truncated": {
                        "name": "mziad.truncated",
                        "unit": "bytes"
                    },
                    "mziad.tt_connect": {
                        "name": "mziad.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mziad.tt_firstbyte": {
                        "name": "mziad.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzlon.bytes": {
                        "name": "mzlon.bytes",
                        "unit": "bytes"
                    },
                    "mzlon.code": {
                        "name": "mzlon.code",
                        "unit": "unknown"
                    },
                    "mzlon.duration": {
                        "name": "mzlon.duration",
                        "unit": "milliseconds"
                    },
                    "mzlon.truncated": {
                        "name": "mzlon.truncated",
                        "unit": "bytes"
                    },
                    "mzlon.tt_connect": {
                        "name": "mzlon.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzlon.tt_firstbyte": {
                        "name": "mzlon.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzord.bytes": {
                        "name": "mzord.bytes",
                        "unit": "bytes"
                    },
                    "mzord.code": {
                        "name": "mzord.code",
                        "unit": "unknown"
                    },
                    "mzord.duration": {
                        "name": "mzord.duration",
                        "unit": "milliseconds"
                    },
                    "mzord.truncated": {
                        "name": "mzord.truncated",
                        "unit": "bytes"
                    },
                    "mzord.tt_connect": {
                        "name": "mzord.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzord.tt_firstbyte": {
                        "name": "mzord.tt_firstbyte",
                        "unit": "milliseconds"
                    }
                },
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "lb_api_check_heat_cloudwatch--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_heat_cloudwatch": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_heat_cloudwatch\",\"filename\":\"lb_api_check_heat_cloudwatch.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '300') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_heat_cloudwatch.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "http://IP_ADDRESS:8003"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "mzdfw.bytes": {
                        "name": "mzdfw.bytes",
                        "unit": "bytes"
                    },
                    "mzdfw.code": {
                        "name": "mzdfw.code",
                        "unit": "unknown"
                    },
                    "mzdfw.duration": {
                        "name": "mzdfw.duration",
                        "unit": "milliseconds"
                    },
                    "mzdfw.truncated": {
                        "name": "mzdfw.truncated",
                        "unit": "bytes"
                    },
                    "mzdfw.tt_connect": {
                        "name": "mzdfw.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzdfw.tt_firstbyte": {
                        "name": "mzdfw.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzhkg.bytes": {
                        "name": "mzhkg.bytes",
                        "unit": "bytes"
                    },
                    "mzhkg.code": {
                        "name": "mzhkg.code",
                        "unit": "unknown"
                    },
                    "mzhkg.duration": {
                        "name": "mzhkg.duration",
                        "unit": "milliseconds"
                    },
                    "mzhkg.truncated": {
                        "name": "mzhkg.truncated",
                        "unit": "bytes"
                    },
                    "mzhkg.tt_connect": {
                        "name": "mzhkg.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzhkg.tt_firstbyte": {
                        "name": "mzhkg.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mziad.bytes": {
                        "name": "mziad.bytes",
                        "unit": "bytes"
                    },
                    "mziad.code": {
                        "name": "mziad.code",
                        "unit": "unknown"
                    },
                    "mziad.duration": {
                        "name": "mziad.duration",
                        "unit": "milliseconds"
                    },
                    "mziad.truncated": {
                        "name": "mziad.truncated",
                        "unit": "bytes"
                    },
                    "mziad.tt_connect": {
                        "name": "mziad.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mziad.tt_firstbyte": {
                        "name": "mziad.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzlon.bytes": {
                        "name": "mzlon.bytes",
                        "unit": "bytes"
                    },
                    "mzlon.code": {
                        "name": "mzlon.code",
                        "unit": "unknown"
                    },
                    "mzlon.duration": {
                        "name": "mzlon.duration",
                        "unit": "milliseconds"
                    },
                    "mzlon.truncated": {
                        "name": "mzlon.truncated",
                        "unit": "bytes"
                    },
                    "mzlon.tt_connect": {
                        "name": "mzlon.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzlon.tt_firstbyte": {
                        "name": "mzlon.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzord.bytes": {
                        "name": "mzord.bytes",
                        "unit": "bytes"
                    },
                    "mzord.code": {
                        "name": "mzord.code",
                        "unit": "unknown"
                    },
                    "mzord.duration": {
                        "name": "mzord.duration",
                        "unit": "milliseconds"
                    },
                    "mzord.truncated": {
                        "name": "mzord.truncated",
                        "unit": "bytes"
                    },
                    "mzord.tt_connect": {
                        "name": "mzord.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzord.tt_firstbyte": {
                        "name": "mzord.tt_firstbyte",
                        "unit": "milliseconds"
                    }
                },
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "lb_api_check_horizon--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_horizon": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_horizon\",\"filename\":\"lb_api_check_horizon.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '200') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_horizon.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "https://IP_ADDRESS:443/auth/login"
                },
                "disabled": true,
                "metadata": null,
                "metrics": {},
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "lb_api_check_keystone--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_keystone": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_keystone\",\"filename\":\"lb_api_check_keystone.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '300') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_keystone.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "http://IP_ADDRESS:5000"
                },
                "disabled": true,
                "metadata": null,
                "metrics": {},
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "lb_api_check_neutron--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_neutron": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_neutron\",\"filename\":\"lb_api_check_neutron.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '200') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_neutron.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "http://IP_ADDRESS:9696/"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "mzdfw.bytes": {
                        "name": "mzdfw.bytes",
                        "unit": "bytes"
                    },
                    "mzdfw.code": {
                        "name": "mzdfw.code",
                        "unit": "unknown"
                    },
                    "mzdfw.duration": {
                        "name": "mzdfw.duration",
                        "unit": "milliseconds"
                    },
                    "mzdfw.truncated": {
                        "name": "mzdfw.truncated",
                        "unit": "bytes"
                    },
                    "mzdfw.tt_connect": {
                        "name": "mzdfw.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzdfw.tt_firstbyte": {
                        "name": "mzdfw.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzhkg.bytes": {
                        "name": "mzhkg.bytes",
                        "unit": "bytes"
                    },
                    "mzhkg.code": {
                        "name": "mzhkg.code",
                        "unit": "unknown"
                    },
                    "mzhkg.duration": {
                        "name": "mzhkg.duration",
                        "unit": "milliseconds"
                    },
                    "mzhkg.truncated": {
                        "name": "mzhkg.truncated",
                        "unit": "bytes"
                    },
                    "mzhkg.tt_connect": {
                        "name": "mzhkg.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzhkg.tt_firstbyte": {
                        "name": "mzhkg.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mziad.bytes": {
                        "name": "mziad.bytes",
                        "unit": "bytes"
                    },
                    "mziad.code": {
                        "name": "mziad.code",
                        "unit": "unknown"
                    },
                    "mziad.duration": {
                        "name": "mziad.duration",
                        "unit": "milliseconds"
                    },
                    "mziad.truncated": {
                        "name": "mziad.truncated",
                        "unit": "bytes"
                    },
                    "mziad.tt_connect": {
                        "name": "mziad.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mziad.tt_firstbyte": {
                        "name": "mziad.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzlon.bytes": {
                        "name": "mzlon.bytes",
                        "unit": "bytes"
                    },
                    "mzlon.code": {
                        "name": "mzlon.code",
                        "unit": "unknown"
                    },
                    "mzlon.duration": {
                        "name": "mzlon.duration",
                        "unit": "milliseconds"
                    },
                    "mzlon.truncated": {
                        "name": "mzlon.truncated",
                        "unit": "bytes"
                    },
                    "mzlon.tt_connect": {
                        "name": "mzlon.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzlon.tt_firstbyte": {
                        "name": "mzlon.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzord.bytes": {
                        "name": "mzord.bytes",
                        "unit": "bytes"
                    },
                    "mzord.code": {
                        "name": "mzord.code",
                        "unit": "unknown"
                    },
                    "mzord.duration": {
                        "name": "mzord.duration",
                        "unit": "milliseconds"
                    },
                    "mzord.truncated": {
                        "name": "mzord.truncated",
                        "unit": "bytes"
                    },
                    "mzord.tt_connect": {
                        "name": "mzord.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzord.tt_firstbyte": {
                        "name": "mzord.tt_firstbyte",
                        "unit": "milliseconds"
                    }
                },
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "lb_api_check_nova--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_nova": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_nova\",\"filename\":\"lb_api_check_nova.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '200') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_nova.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "http://IP_ADDRESS:8774"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "mzdfw.bytes": {
                        "name": "mzdfw.bytes",
                        "unit": "bytes"
                    },
                    "mzdfw.code": {
                        "name": "mzdfw.code",
                        "unit": "unknown"
                    },
                    "mzdfw.duration": {
                        "name": "mzdfw.duration",
                        "unit": "milliseconds"
                    },
                    "mzdfw.truncated": {
                        "name": "mzdfw.truncated",
                        "unit": "bytes"
                    },
                    "mzdfw.tt_connect": {
                        "name": "mzdfw.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzdfw.tt_firstbyte": {
                        "name": "mzdfw.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzhkg.bytes": {
                        "name": "mzhkg.bytes",
                        "unit": "bytes"
                    },
                    "mzhkg.code": {
                        "name": "mzhkg.code",
                        "unit": "unknown"
                    },
                    "mzhkg.duration": {
                        "name": "mzhkg.duration",
                        "unit": "milliseconds"
                    },
                    "mzhkg.truncated": {
                        "name": "mzhkg.truncated",
                        "unit": "bytes"
                    },
                    "mzhkg.tt_connect": {
                        "name": "mzhkg.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzhkg.tt_firstbyte": {
                        "name": "mzhkg.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mziad.bytes": {
                        "name": "mziad.bytes",
                        "unit": "bytes"
                    },
                    "mziad.code": {
                        "name": "mziad.code",
                        "unit": "unknown"
                    },
                    "mziad.duration": {
                        "name": "mziad.duration",
                        "unit": "milliseconds"
                    },
                    "mziad.truncated": {
                        "name": "mziad.truncated",
                        "unit": "bytes"
                    },
                    "mziad.tt_connect": {
                        "name": "mziad.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mziad.tt_firstbyte": {
                        "name": "mziad.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzlon.bytes": {
                        "name": "mzlon.bytes",
                        "unit": "bytes"
                    },
                    "mzlon.code": {
                        "name": "mzlon.code",
                        "unit": "unknown"
                    },
                    "mzlon.duration": {
                        "name": "mzlon.duration",
                        "unit": "milliseconds"
                    },
                    "mzlon.truncated": {
                        "name": "mzlon.truncated",
                        "unit": "bytes"
                    },
                    "mzlon.tt_connect": {
                        "name": "mzlon.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzlon.tt_firstbyte": {
                        "name": "mzlon.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzord.bytes": {
                        "name": "mzord.bytes",
                        "unit": "bytes"
                    },
                    "mzord.code": {
                        "name": "mzord.code",
                        "unit": "unknown"
                    },
                    "mzord.duration": {
                        "name": "mzord.duration",
                        "unit": "milliseconds"
                    },
                    "mzord.truncated": {
                        "name": "mzord.truncated",
                        "unit": "bytes"
                    },
                    "mzord.tt_connect": {
                        "name": "mzord.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzord.tt_firstbyte": {
                        "name": "mzord.tt_firstbyte",
                        "unit": "milliseconds"
                    }
                },
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "lb_api_check_swift_proxy--unspecified_lb": {
                "active_suppressions": [],
                "alarms": {
                    "lb_api_alarm_swift_proxy": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"lb_api_alarm_swift_proxy\",\"filename\":\"lb_api_check_swift_proxy.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric['code'] != '200') {\n    return new AlarmStatus(CRITICAL, 'API unavailable.');\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"lb_api_check_swift_proxy.yaml\"}",
                "details": {
                    "follow_redirects": true,
                    "include_body": false,
                    "method": "GET",
                    "url": "http://IP_ADDRESS:8080/healthcheck"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "mzdfw.bytes": {
                        "name": "mzdfw.bytes",
                        "unit": "bytes"
                    },
                    "mzdfw.code": {
                        "name": "mzdfw.code",
                        "unit": "unknown"
                    },
                    "mzdfw.duration": {
                        "name": "mzdfw.duration",
                        "unit": "milliseconds"
                    },
                    "mzdfw.truncated": {
                        "name": "mzdfw.truncated",
                        "unit": "bytes"
                    },
                    "mzdfw.tt_connect": {
                        "name": "mzdfw.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzdfw.tt_firstbyte": {
                        "name": "mzdfw.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzhkg.bytes": {
                        "name": "mzhkg.bytes",
                        "unit": "bytes"
                    },
                    "mzhkg.code": {
                        "name": "mzhkg.code",
                        "unit": "unknown"
                    },
                    "mzhkg.duration": {
                        "name": "mzhkg.duration",
                        "unit": "milliseconds"
                    },
                    "mzhkg.truncated": {
                        "name": "mzhkg.truncated",
                        "unit": "bytes"
                    },
                    "mzhkg.tt_connect": {
                        "name": "mzhkg.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzhkg.tt_firstbyte": {
                        "name": "mzhkg.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mziad.bytes": {
                        "name": "mziad.bytes",
                        "unit": "bytes"
                    },
                    "mziad.code": {
                        "name": "mziad.code",
                        "unit": "unknown"
                    },
                    "mziad.duration": {
                        "name": "mziad.duration",
                        "unit": "milliseconds"
                    },
                    "mziad.truncated": {
                        "name": "mziad.truncated",
                        "unit": "bytes"
                    },
                    "mziad.tt_connect": {
                        "name": "mziad.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mziad.tt_firstbyte": {
                        "name": "mziad.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzlon.bytes": {
                        "name": "mzlon.bytes",
                        "unit": "bytes"
                    },
                    "mzlon.code": {
                        "name": "mzlon.code",
                        "unit": "unknown"
                    },
                    "mzlon.duration": {
                        "name": "mzlon.duration",
                        "unit": "milliseconds"
                    },
                    "mzlon.truncated": {
                        "name": "mzlon.truncated",
                        "unit": "bytes"
                    },
                    "mzlon.tt_connect": {
                        "name": "mzlon.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzlon.tt_firstbyte": {
                        "name": "mzlon.tt_firstbyte",
                        "unit": "milliseconds"
                    },
                    "mzord.bytes": {
                        "name": "mzord.bytes",
                        "unit": "bytes"
                    },
                    "mzord.code": {
                        "name": "mzord.code",
                        "unit": "unknown"
                    },
                    "mzord.duration": {
                        "name": "mzord.duration",
                        "unit": "milliseconds"
                    },
                    "mzord.truncated": {
                        "name": "mzord.truncated",
                        "unit": "bytes"
                    },
                    "mzord.tt_connect": {
                        "name": "mzord.tt_connect",
                        "unit": "milliseconds"
                    },
                    "mzord.tt_firstbyte": {
                        "name": "mzord.tt_firstbyte",
                        "unit": "milliseconds"
                    }
                },
                "monitoring_zones_poll": [
                    "mzdfw",
                    "mziad",
                    "mzord",
                    "mzlon",
                    "mzhkg"
                ],
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": "IP_ADDRESS",
                "target_resolver": "IPv4",
                "timeout": 30,
                "type": "remote.http"
            },
            "memcached_status--AIO_memcached_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "memcache_api_local_status--AIO_memcached_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"memcache_api_local_status\",\"filename\":\"memcached_status--AIO_memcached_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"memcache_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"memcache unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"memcached_status--AIO_memcached_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "memcached_status.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "memcache_api_local_status": {
                        "name": "memcache_api_local_status",
                        "unit": "unknown"
                    },
                    "memcache_get_hits": {
                        "name": "memcache_get_hits",
                        "unit": "cache_hits"
                    },
                    "memcache_get_misses": {
                        "name": "memcache_get_misses",
                        "unit": "cache_misses"
                    },
                    "memcache_total_connections": {
                        "name": "memcache_total_connections",
                        "unit": "connections"
                    },
                    "memcache_total_items": {
                        "name": "memcache_total_items",
                        "unit": "items"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "memory_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "memory_check--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"memory_used\",\"filename\":\"memory_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"actual_used\"], metric[\"total\"]) >= 95.0) {\n    return new AlarmStatus(WARNING, \"Memory is 95.0%+ in use.\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"memory_check--AIO.yaml\"}",
                "details": {},
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "actual_free": {
                        "name": "actual_free",
                        "unit": "bytes"
                    },
                    "actual_used": {
                        "name": "actual_used",
                        "unit": "bytes"
                    },
                    "free": {
                        "name": "free",
                        "unit": "bytes"
                    },
                    "ram": {
                        "name": "ram",
                        "unit": "megabytes"
                    },
                    "swap_free": {
                        "name": "swap_free",
                        "unit": "bytes"
                    },
                    "swap_page_in": {
                        "name": "swap_page_in",
                        "unit": "bytes"
                    },
                    "swap_page_out": {
                        "name": "swap_page_out",
                        "unit": "bytes"
                    },
                    "swap_total": {
                        "name": "swap_total",
                        "unit": "bytes"
                    },
                    "swap_used": {
                        "name": "swap_used",
                        "unit": "bytes"
                    },
                    "total": {
                        "name": "total",
                        "unit": "bytes"
                    },
                    "used": {
                        "name": "used",
                        "unit": "bytes"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.memory"
            },
            "network_throughput_eth0--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "Network receive rate on eth0": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"alarm-network-receive\",\"filename\":\"network_throughput-eth0-AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (rate(metric['rx_bytes']) > 0) {\n  return new AlarmStatus(CRITICAL, \"Network receive rate on eth0 is above your critical threshold of 60% utilisation.\");\n}\nif (rate(metric['rx_bytes']) > 0) {\n  return new AlarmStatus(WARNING, \"Network receive rate on eth0 is above your warning threshold of 40% utilisation.\");\n}\nreturn new AlarmStatus(OK, \"Network receive rate on eth0 is below your warning threshold of 40% utilisation.\");\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "Network transmit rate on eth0": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"alarm-network-transmit\",\"filename\":\"network_throughput-eth0-AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (rate(metric['tx_bytes']) > 0) {\n  return new AlarmStatus(CRITICAL, \"Network transmit rate on eth0 is above your critical threshold of 60% utilisation.\");\n}\nif (rate(metric['tx_bytes']) > 0) {\n  return new AlarmStatus(WARNING, \"Network transmit rate on eth0 is above your warning threshold of 40% utilisation.\");\n}\nreturn new AlarmStatus(OK, \"Network transmit rate on eth0 is below your warning threshold of 40% utilisation.\");\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"network_throughput-eth0-AIO.yaml\"}",
                "details": {
                    "target": "eth0"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "link_state": {
                        "name": "link_state",
                        "unit": "link_state"
                    },
                    "rx_bytes": {
                        "name": "rx_bytes",
                        "unit": "bytes"
                    },
                    "rx_dropped": {
                        "name": "rx_dropped",
                        "unit": "packets"
                    },
                    "rx_errors": {
                        "name": "rx_errors",
                        "unit": "errors"
                    },
                    "rx_frame": {
                        "name": "rx_frame",
                        "unit": "frames"
                    },
                    "rx_overruns": {
                        "name": "rx_overruns",
                        "unit": "overruns"
                    },
                    "rx_packets": {
                        "name": "rx_packets",
                        "unit": "packets"
                    },
                    "tx_bytes": {
                        "name": "tx_bytes",
                        "unit": "bytes"
                    },
                    "tx_carrier": {
                        "name": "tx_carrier",
                        "unit": "errors"
                    },
                    "tx_collisions": {
                        "name": "tx_collisions",
                        "unit": "collisions"
                    },
                    "tx_dropped": {
                        "name": "tx_dropped",
                        "unit": "packets"
                    },
                    "tx_errors": {
                        "name": "tx_errors",
                        "unit": "errors"
                    },
                    "tx_overruns": {
                        "name": "tx_overruns",
                        "unit": "overruns"
                    },
                    "tx_packets": {
                        "name": "tx_packets",
                        "unit": "packets"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.network"
            },
            "network_throughput_eth1--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "Network receive rate on eth1": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"alarm-network-receive\",\"filename\":\"network_throughput-eth1-AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (rate(metric['rx_bytes']) > 0) {\n  return new AlarmStatus(CRITICAL, \"Network receive rate on eth1 is above your critical threshold of 60% utilisation.\");\n}\nif (rate(metric['rx_bytes']) > 0) {\n  return new AlarmStatus(WARNING, \"Network receive rate on eth1 is above your warning threshold of 40% utilisation.\");\n}\nreturn new AlarmStatus(OK, \"Network receive rate on eth1 is below your warning threshold of 40% utilisation.\");\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "Network transmit rate on eth1": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"alarm-network-transmit\",\"filename\":\"network_throughput-eth1-AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (rate(metric['tx_bytes']) > 0) {\n  return new AlarmStatus(CRITICAL, \"Network transmit rate on eth1 is above your critical threshold of 60% utilisation.\");\n}\nif (rate(metric['tx_bytes']) > 0) {\n  return new AlarmStatus(WARNING, \"Network transmit rate on eth1 is above your warning threshold of 40% utilisation.\");\n}\nreturn new AlarmStatus(OK, \"Network transmit rate on eth1 is below your warning threshold of 40% utilisation.\");\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"network_throughput-eth1-AIO.yaml\"}",
                "details": {
                    "target": "eth1"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "link_state": {
                        "name": "link_state",
                        "unit": "link_state"
                    },
                    "rx_bytes": {
                        "name": "rx_bytes",
                        "unit": "bytes"
                    },
                    "rx_dropped": {
                        "name": "rx_dropped",
                        "unit": "packets"
                    },
                    "rx_errors": {
                        "name": "rx_errors",
                        "unit": "errors"
                    },
                    "rx_frame": {
                        "name": "rx_frame",
                        "unit": "frames"
                    },
                    "rx_overruns": {
                        "name": "rx_overruns",
                        "unit": "overruns"
                    },
                    "rx_packets": {
                        "name": "rx_packets",
                        "unit": "packets"
                    },
                    "tx_bytes": {
                        "name": "tx_bytes",
                        "unit": "bytes"
                    },
                    "tx_carrier": {
                        "name": "tx_carrier",
                        "unit": "errors"
                    },
                    "tx_collisions": {
                        "name": "tx_collisions",
                        "unit": "collisions"
                    },
                    "tx_dropped": {
                        "name": "tx_dropped",
                        "unit": "packets"
                    },
                    "tx_errors": {
                        "name": "tx_errors",
                        "unit": "errors"
                    },
                    "tx_overruns": {
                        "name": "tx_overruns",
                        "unit": "overruns"
                    },
                    "tx_packets": {
                        "name": "tx_packets",
                        "unit": "packets"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.network"
            },
            "network_throughput_eth2--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "Network receive rate on eth2": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"alarm-network-receive\",\"filename\":\"network_throughput-eth2-AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (rate(metric['rx_bytes']) > 0) {\n  return new AlarmStatus(CRITICAL, \"Network receive rate on eth2 is above your critical threshold of 60% utilisation.\");\n}\nif (rate(metric['rx_bytes']) > 0) {\n  return new AlarmStatus(WARNING, \"Network receive rate on eth2 is above your warning threshold of 40% utilisation.\");\n}\nreturn new AlarmStatus(OK, \"Network receive rate on eth2 is below your warning threshold of 40% utilisation.\");\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "Network transmit rate on eth2": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"alarm-network-transmit\",\"filename\":\"network_throughput-eth2-AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (rate(metric['tx_bytes']) > 0) {\n  return new AlarmStatus(CRITICAL, \"Network transmit rate on eth2 is above your critical threshold of 60% utilisation.\");\n}\nif (rate(metric['tx_bytes']) > 0) {\n  return new AlarmStatus(WARNING, \"Network transmit rate on eth2 is above your warning threshold of 40% utilisation.\");\n}\nreturn new AlarmStatus(OK, \"Network transmit rate on eth2 is below your warning threshold of 40% utilisation.\");\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"network_throughput-eth2-AIO.yaml\"}",
                "details": {
                    "target": "eth2"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "link_state": {
                        "name": "link_state",
                        "unit": "link_state"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.network"
            },
            "network_throughput_eth3--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "Network receive rate on eth3": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"alarm-network-receive\",\"filename\":\"network_throughput-eth3-AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (rate(metric['rx_bytes']) > 0) {\n  return new AlarmStatus(CRITICAL, \"Network receive rate on eth3 is above your critical threshold of 60% utilisation.\");\n}\nif (rate(metric['rx_bytes']) > 0) {\n  return new AlarmStatus(WARNING, \"Network receive rate on eth3 is above your warning threshold of 40% utilisation.\");\n}\nreturn new AlarmStatus(OK, \"Network receive rate on eth3 is below your warning threshold of 40% utilisation.\");\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "Network transmit rate on eth3": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"alarm-network-transmit\",\"filename\":\"network_throughput-eth3-AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (rate(metric['tx_bytes']) > 0) {\n  return new AlarmStatus(CRITICAL, \"Network transmit rate on eth3 is above your critical threshold of 60% utilisation.\");\n}\nif (rate(metric['tx_bytes']) > 0) {\n  return new AlarmStatus(WARNING, \"Network transmit rate on eth3 is above your warning threshold of 40% utilisation.\");\n}\nreturn new AlarmStatus(OK, \"Network transmit rate on eth3 is below your warning threshold of 40% utilisation.\");\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"network_throughput-eth3-AIO.yaml\"}",
                "details": {
                    "target": "eth3"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "link_state": {
                        "name": "link_state",
                        "unit": "link_state"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.network"
            },
            "neutron_api_local_check--AIO_neutron_server_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "neutron_api_local_status--AIO_neutron_server_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"neutron_api_local_status\",\"filename\":\"neutron_api_local_check--AIO_neutron_server_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"neutron_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"neutron_api_local_check--AIO_neutron_server_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "neutron_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "neutron_agents": {
                        "name": "neutron_agents",
                        "unit": "agents"
                    },
                    "neutron_api_local_response_time": {
                        "name": "neutron_api_local_response_time",
                        "unit": "ms"
                    },
                    "neutron_api_local_status": {
                        "name": "neutron_api_local_status",
                        "unit": "unknown"
                    },
                    "neutron_networks": {
                        "name": "neutron_networks",
                        "unit": "networks"
                    },
                    "neutron_routers": {
                        "name": "neutron_routers",
                        "unit": "agents"
                    },
                    "neutron_subnets": {
                        "name": "neutron_subnets",
                        "unit": "subnets"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "neutron_dhcp_agent_check--AIO_neutron_agents_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "neutron_dhcp_agent_status--AIO_neutron_agents_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"neutron_dhcp_agent_status\",\"filename\":\"neutron_dhcp_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"neutron-dhcp-agent_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"neutron-dhcp-agent down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"neutron_dhcp_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_neutron_agents_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "neutron_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "neutron-dhcp-agent_status": {
                        "name": "neutron-dhcp-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-l3-agent_status": {
                        "name": "neutron-l3-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-linuxbridge-agent_status": {
                        "name": "neutron-linuxbridge-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metadata-agent_status": {
                        "name": "neutron-metadata-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metering-agent_status": {
                        "name": "neutron-metering-agent_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "neutron_l3_agent_check--AIO_neutron_agents_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "neutron_l3_agent_status--AIO_neutron_agents_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"neutron_l3_agent_status\",\"filename\":\"neutron_l3_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"neutron-l3-agent_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"neutron-l3-agent down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"neutron_l3_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_neutron_agents_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "neutron_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "neutron-dhcp-agent_status": {
                        "name": "neutron-dhcp-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-l3-agent_status": {
                        "name": "neutron-l3-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-linuxbridge-agent_status": {
                        "name": "neutron-linuxbridge-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metadata-agent_status": {
                        "name": "neutron-metadata-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metering-agent_status": {
                        "name": "neutron-metering-agent_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "neutron_linuxbridge_agent_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "neutron_linuxbridge_agent_status--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"neutron_linuxbridge_agent_status\",\"filename\":\"neutron_linuxbridge_agent_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"neutron-linuxbridge-agent_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"neutron-linuxbridge-agent down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"neutron_linuxbridge_agent_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO",
                        "IP_ADDRESS"
                    ],
                    "file": "neutron_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "neutron-linuxbridge-agent_status": {
                        "name": "neutron-linuxbridge-agent_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "neutron_linuxbridge_agent_check--AIO_neutron_agents_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "neutron_linuxbridge_agent_status--AIO_neutron_agents_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"neutron_linuxbridge_agent_status\",\"filename\":\"neutron_linuxbridge_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"neutron-linuxbridge-agent_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"neutron-linuxbridge-agent down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"neutron_linuxbridge_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_neutron_agents_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "neutron_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "neutron-dhcp-agent_status": {
                        "name": "neutron-dhcp-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-l3-agent_status": {
                        "name": "neutron-l3-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-linuxbridge-agent_status": {
                        "name": "neutron-linuxbridge-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metadata-agent_status": {
                        "name": "neutron-metadata-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metering-agent_status": {
                        "name": "neutron-metering-agent_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "neutron_metadata_agent_check--AIO_neutron_agents_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "neutron_metadata_agent_status--AIO_neutron_agents_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"neutron_metadata_agent_status\",\"filename\":\"neutron_metadata_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"neutron-metadata-agent_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"neutron-metadata-agent down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"neutron_metadata_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_neutron_agents_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "neutron_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "neutron-dhcp-agent_status": {
                        "name": "neutron-dhcp-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-l3-agent_status": {
                        "name": "neutron-l3-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-linuxbridge-agent_status": {
                        "name": "neutron-linuxbridge-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metadata-agent_status": {
                        "name": "neutron-metadata-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metering-agent_status": {
                        "name": "neutron-metering-agent_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "neutron_metering_agent_check--AIO_neutron_agents_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "neutron_metering_agent_status--AIO_neutron_agents_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"neutron_metering_agent_status\",\"filename\":\"neutron_metering_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"neutron-metering-agent_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"neutron-metering-agent down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"neutron_metering_agent_check--AIO_neutron_agents_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_neutron_agents_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "neutron_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "neutron-dhcp-agent_status": {
                        "name": "neutron-dhcp-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-l3-agent_status": {
                        "name": "neutron-l3-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-linuxbridge-agent_status": {
                        "name": "neutron-linuxbridge-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metadata-agent_status": {
                        "name": "neutron-metadata-agent_status",
                        "unit": "unknown"
                    },
                    "neutron-metering-agent_status": {
                        "name": "neutron-metering-agent_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "nova_api_local_check--AIO_nova_api_os_compute_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "nova_api_local_status--AIO_nova_api_os_compute_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_api_local_status\",\"filename\":\"nova_api_local_check--AIO_nova_api_os_compute_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"nova_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API (os-compute) unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"nova_api_local_check--AIO_nova_api_os_compute_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "nova_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "nova_api_local_response_time": {
                        "name": "nova_api_local_response_time",
                        "unit": "ms"
                    },
                    "nova_api_local_status": {
                        "name": "nova_api_local_status",
                        "unit": "unknown"
                    },
                    "nova_instances_in_state_ACTIVE": {
                        "name": "nova_instances_in_state_ACTIVE",
                        "unit": "instances"
                    },
                    "nova_instances_in_state_ERROR": {
                        "name": "nova_instances_in_state_ERROR",
                        "unit": "instances"
                    },
                    "nova_instances_in_state_STOPPED": {
                        "name": "nova_instances_in_state_STOPPED",
                        "unit": "instances"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "nova_api_metadata_local_check--AIO_nova_api_metadata_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "nova_api_metadata_local_status--AIO_nova_api_metadata_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_api_metadata_local_status\",\"filename\":\"nova_api_metadata_local_check--AIO_nova_api_metadata_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"nova_api_metadata_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API (metadata) unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"nova_api_metadata_local_check--AIO_nova_api_metadata_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "nova_api_metadata_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "nova_api_metadata_local_response_time": {
                        "name": "nova_api_metadata_local_response_time",
                        "unit": "ms"
                    },
                    "nova_api_metadata_local_status": {
                        "name": "nova_api_metadata_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "nova_cert_check--AIO_nova_cert_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "nova_cert_status--AIO_nova_cert_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_cert_status\",\"filename\":\"nova_cert_check--AIO_nova_cert_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"nova-cert_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"nova-cert down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"nova_cert_check--AIO_nova_cert_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_nova_cert_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "nova_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "nova-cert_status": {
                        "name": "nova-cert_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "nova_cloud_stats_check--AIO_nova_api_os_compute_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "nova_cloud_disk_status--AIO_nova_api_os_compute_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_cloud_disk_status\",\"filename\":\"nova_cloud_stats_check--AIO_nova_api_os_compute_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"cloud_resource_used_disk_space\"], metric[\"cloud_resource_total_disk_space\"]) > 90.0) {\n    return new AlarmStatus(CRITICAL, \"Total cloud disk_space usage exceeds critical threshold of 90.0%\");\n}\nif (percentage(metric[\"cloud_resource_used_disk_space\"], metric[\"cloud_resource_total_disk_space\"]) > 80.0) {\n    return new AlarmStatus(WARNING, \"Total cloud disk_space usage exceeds warning threshold of 80.0%\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "nova_cloud_memory_status--AIO_nova_api_os_compute_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_cloud_memory_status\",\"filename\":\"nova_cloud_stats_check--AIO_nova_api_os_compute_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"cloud_resource_used_memory\"], metric[\"cloud_resource_total_memory\"]) > 90.0) {\n    return new AlarmStatus(CRITICAL, \"Total cloud memory usage exceeds critical threshold of 90.0%\");\n}\nif (percentage(metric[\"cloud_resource_used_memory\"], metric[\"cloud_resource_total_memory\"]) > 80.0) {\n    return new AlarmStatus(WARNING, \"Total cloud memory usage exceeds warning threshold of 80.0%\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "nova_cloud_vcpu_status--AIO_nova_api_os_compute_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_cloud_vcpu_status\",\"filename\":\"nova_cloud_stats_check--AIO_nova_api_os_compute_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"cloud_resource_used_vcpus\"], metric[\"cloud_resource_total_vcpus\"]) > 90.0) {\n    return new AlarmStatus(CRITICAL, \"Total cloud vcpus usage exceeds critical threshold of 90.0%\");\n}\nif (percentage(metric[\"cloud_resource_used_vcpus\"], metric[\"cloud_resource_total_vcpus\"]) > 80.0) {\n    return new AlarmStatus(WARNING, \"Total cloud vcpus usage exceeds warning threshold of 80.0%\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"nova_cloud_stats_check--AIO_nova_api_os_compute_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "IP_ADDRESS"
                    ],
                    "file": "nova_cloud_stats.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "cloud_resource_free_disk_space": {
                        "name": "cloud_resource_free_disk_space",
                        "unit": "Gigabytes"
                    },
                    "cloud_resource_free_memory": {
                        "name": "cloud_resource_free_memory",
                        "unit": "megabytes"
                    },
                    "cloud_resource_hypervisor_count": {
                        "name": "cloud_resource_hypervisor_count",
                        "unit": "hypervisors"
                    },
                    "cloud_resource_total_disk_space": {
                        "name": "cloud_resource_total_disk_space",
                        "unit": "Gigabytes"
                    },
                    "cloud_resource_total_memory": {
                        "name": "cloud_resource_total_memory",
                        "unit": "megabytes"
                    },
                    "cloud_resource_total_vcpus": {
                        "name": "cloud_resource_total_vcpus",
                        "unit": "vcpu"
                    },
                    "cloud_resource_used_disk_space": {
                        "name": "cloud_resource_used_disk_space",
                        "unit": "Gigabytes"
                    },
                    "cloud_resource_used_memory": {
                        "name": "cloud_resource_used_memory",
                        "unit": "megabytes"
                    },
                    "cloud_resource_used_vcpus": {
                        "name": "cloud_resource_used_vcpus",
                        "unit": "vcpu"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "nova_compute_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "nova_compute_status--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_compute_status\",\"filename\":\"nova_compute_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"nova-compute_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"nova-compute down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"nova_compute_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO",
                        "IP_ADDRESS"
                    ],
                    "file": "nova_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "nova-compute_status": {
                        "name": "nova-compute_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "nova_conductor_check--AIO_nova_conductor_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "nova_conductor_status--AIO_nova_conductor_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_conductor_status\",\"filename\":\"nova_conductor_check--AIO_nova_conductor_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"nova-conductor_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"nova-conductor down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"nova_conductor_check--AIO_nova_conductor_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_nova_conductor_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "nova_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "nova-conductor_status": {
                        "name": "nova-conductor_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "nova_consoleauth_check--AIO_nova_console_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "nova_consoleauth_status--AIO_nova_console_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_consoleauth_status\",\"filename\":\"nova_consoleauth_check--AIO_nova_console_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"nova-consoleauth_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"nova-consoleauth down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"nova_consoleauth_check--AIO_nova_console_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_nova_console_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "nova_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "nova-consoleauth_status": {
                        "name": "nova-consoleauth_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "nova_scheduler_check--AIO_nova_scheduler_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "nova_scheduler_status--AIO_nova_scheduler_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_scheduler_status\",\"filename\":\"nova_scheduler_check--AIO_nova_scheduler_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"nova-scheduler_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"nova-scheduler down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"nova_scheduler_check--AIO_nova_scheduler_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "--host",
                        "AIO_nova_scheduler_container-UID",
                        "IP_ADDRESS"
                    ],
                    "file": "nova_service_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "nova-scheduler_status": {
                        "name": "nova-scheduler_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "nova_spice_console_check--AIO_nova_console_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "nova_spice_api_local_status--AIO_nova_console_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"nova_spice_api_local_status\",\"filename\":\"nova_spice_console_check--AIO_nova_console_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"nova_spice_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"nova spice console down\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"nova_spice_console_check--AIO_nova_console_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "nova_spice",
                        "IP_ADDRESS",
                        "6082",
                        "--path",
                        "spice_auto.html"
                    ],
                    "file": "service_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "nova_spice_api_local_response_time": {
                        "name": "nova_spice_api_local_response_time",
                        "unit": "ms"
                    },
                    "nova_spice_api_local_status": {
                        "name": "nova_spice_api_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "rabbitmq_status--AIO_rabbit_mq_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "rabbitmq_disk_free_alarm_status--AIO_rabbit_mq_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"rabbitmq_disk_free_alarm_status\",\"filename\":\"rabbitmq_status--AIO_rabbit_mq_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"rabbitmq_disk_free_alarm_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"rabbitmq_disk_free_alarm_status triggered\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "rabbitmq_fd_used_alarm_status-AIO_rabbit_mq_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"rabbitmq_fd_used_alarm_status\",\"filename\":\"rabbitmq_status--AIO_rabbit_mq_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"rabbitmq_fd_used\"],metric[\"rabbitmq_fd_total\"]) >= 90) {\n    return new AlarmStatus(CRITICAL, \"RabbitMQ file descriptors is reaching configured limit. Currently above 90 % used\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "rabbitmq_max_channels_per_conn--AIO_rabbit_mq_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"rabbitmq_max_channels_per_conn\",\"filename\":\"rabbitmq_status--AIO_rabbit_mq_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"rabbitmq_max_channels_per_conn\"] > 10) {\n    return new AlarmStatus(CRITICAL, \"Detected RabbitMQ connections with > 10 channels, check RabbitMQ and all Openstack consumers\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "rabbitmq_mem_alarm_status--AIO_rabbit_mq_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"rabbitmq_mem_alarm_status\",\"filename\":\"rabbitmq_status--AIO_rabbit_mq_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"rabbitmq_mem_alarm_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"rabbitmq_mem_alarm_status triggered\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "rabbitmq_msgs_excl_notifications--AIO_rabbit_mq_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"rabbitmq_msgs_excl_notifications\",\"filename\":\"rabbitmq_status--AIO_rabbit_mq_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"rabbitmq_msgs_excl_notifications\"] > 100 ) {\n    return new AlarmStatus(CRITICAL, \"RabbitMQ sum of queued messages excluding notifications queues is reaching configured limit. Currently above 100\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "rabbitmq_proc_used_alarm_status--AIO_rabbit_mq_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"rabbitmq_proc_used_alarm_status\",\"filename\":\"rabbitmq_status--AIO_rabbit_mq_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"rabbitmq_proc_used\"],metric[\"rabbitmq_proc_total\"]) >= 90) {\n    return new AlarmStatus(CRITICAL, \"RabbitMQ processes is reaching configured limit. Currently above 90 % used\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "rabbitmq_qgrowth_excl_notifications--AIO_rabbit_mq_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"rabbitmq_qgrowth_excl_notifications\",\"filename\":\"rabbitmq_status--AIO_rabbit_mq_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (rate(metric[\"rabbitmq_msgs_excl_notifications\"]) > 0.25) {\n    return new AlarmStatus(CRITICAL, \"RabbitMQ Queue growth rate is above configured threshold. Currently above 15\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "rabbitmq_socket_used_alarm_status--AIO_rabbit_mq_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"rabbitmq_socket_used_alarm_status\",\"filename\":\"rabbitmq_status--AIO_rabbit_mq_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (percentage(metric[\"rabbitmq_sockets_used\"],metric[\"rabbitmq_sockets_total\"]) >= 90) {\n    return new AlarmStatus(CRITICAL, \"RabbitMQ sockets is reaching configured limit. Currently above 90 % used\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"rabbitmq_status--AIO_rabbit_mq_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "-H",
                        "IP_ADDRESS",
                        "-n",
                        "AIO_rabbit_mq_container-UID",
                        "-U",
                        "maas_user",
                        "-p",
                        "PASSWORD"
                    ],
                    "file": "rabbitmq_status.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "rabbitmq_ack": {
                        "name": "rabbitmq_ack",
                        "unit": "messages"
                    },
                    "rabbitmq_deliver": {
                        "name": "rabbitmq_deliver",
                        "unit": "messages"
                    },
                    "rabbitmq_deliver_get": {
                        "name": "rabbitmq_deliver_get",
                        "unit": "messages"
                    },
                    "rabbitmq_disk_free_alarm_status": {
                        "name": "rabbitmq_disk_free_alarm_status",
                        "unit": "unknown"
                    },
                    "rabbitmq_fd_total": {
                        "name": "rabbitmq_fd_total",
                        "unit": "fd"
                    },
                    "rabbitmq_fd_used": {
                        "name": "rabbitmq_fd_used",
                        "unit": "fd"
                    },
                    "rabbitmq_max_channels_per_conn": {
                        "name": "rabbitmq_max_channels_per_conn",
                        "unit": "channels"
                    },
                    "rabbitmq_mem_alarm_status": {
                        "name": "rabbitmq_mem_alarm_status",
                        "unit": "unknown"
                    },
                    "rabbitmq_mem_limit": {
                        "name": "rabbitmq_mem_limit",
                        "unit": "bytes"
                    },
                    "rabbitmq_mem_used": {
                        "name": "rabbitmq_mem_used",
                        "unit": "bytes"
                    },
                    "rabbitmq_messages": {
                        "name": "rabbitmq_messages",
                        "unit": "messages"
                    },
                    "rabbitmq_messages_ready": {
                        "name": "rabbitmq_messages_ready",
                        "unit": "messages"
                    },
                    "rabbitmq_messages_unacknowledged": {
                        "name": "rabbitmq_messages_unacknowledged",
                        "unit": "messages"
                    },
                    "rabbitmq_msgs_excl_notifications": {
                        "name": "rabbitmq_msgs_excl_notifications",
                        "unit": "messages"
                    },
                    "rabbitmq_notification_messages": {
                        "name": "rabbitmq_notification_messages",
                        "unit": "messages"
                    },
                    "rabbitmq_proc_total": {
                        "name": "rabbitmq_proc_total",
                        "unit": "processes"
                    },
                    "rabbitmq_proc_used": {
                        "name": "rabbitmq_proc_used",
                        "unit": "processes"
                    },
                    "rabbitmq_publish": {
                        "name": "rabbitmq_publish",
                        "unit": "messages"
                    },
                    "rabbitmq_sockets_total": {
                        "name": "rabbitmq_sockets_total",
                        "unit": "fd"
                    },
                    "rabbitmq_sockets_used": {
                        "name": "rabbitmq_sockets_used",
                        "unit": "fd"
                    },
                    "rabbitmq_uptime": {
                        "name": "rabbitmq_uptime",
                        "unit": "ms"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_account_replication_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "swift_account_replication_check--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_account_replication_check\",\"filename\":\"swift_account_replication_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"time_failed\"] > 5.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Account Replication Failure Percentage Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_account_replication_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "--ring-type",
                        "account",
                        "replication"
                    ],
                    "file": "swift-recon.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "attempted_avg": {
                        "name": "attempted_avg",
                        "unit": "unknown"
                    },
                    "attempted_failed": {
                        "name": "attempted_failed",
                        "unit": "unknown"
                    },
                    "attempted_high": {
                        "name": "attempted_high",
                        "unit": "unknown"
                    },
                    "attempted_low": {
                        "name": "attempted_low",
                        "unit": "unknown"
                    },
                    "attempted_no_result": {
                        "name": "attempted_no_result",
                        "unit": "unknown"
                    },
                    "attempted_reported": {
                        "name": "attempted_reported",
                        "unit": "unknown"
                    },
                    "attempted_total": {
                        "name": "attempted_total",
                        "unit": "unknown"
                    },
                    "failure_avg": {
                        "name": "failure_avg",
                        "unit": "unknown"
                    },
                    "failure_failed": {
                        "name": "failure_failed",
                        "unit": "unknown"
                    },
                    "failure_high": {
                        "name": "failure_high",
                        "unit": "unknown"
                    },
                    "failure_low": {
                        "name": "failure_low",
                        "unit": "unknown"
                    },
                    "failure_no_result": {
                        "name": "failure_no_result",
                        "unit": "unknown"
                    },
                    "failure_reported": {
                        "name": "failure_reported",
                        "unit": "unknown"
                    },
                    "failure_total": {
                        "name": "failure_total",
                        "unit": "unknown"
                    },
                    "success_avg": {
                        "name": "success_avg",
                        "unit": "unknown"
                    },
                    "success_failed": {
                        "name": "success_failed",
                        "unit": "unknown"
                    },
                    "success_high": {
                        "name": "success_high",
                        "unit": "unknown"
                    },
                    "success_low": {
                        "name": "success_low",
                        "unit": "unknown"
                    },
                    "success_no_result": {
                        "name": "success_no_result",
                        "unit": "unknown"
                    },
                    "success_reported": {
                        "name": "success_reported",
                        "unit": "unknown"
                    },
                    "success_total": {
                        "name": "success_total",
                        "unit": "unknown"
                    },
                    "time_avg": {
                        "name": "time_avg",
                        "unit": "unknown"
                    },
                    "time_failed": {
                        "name": "time_failed",
                        "unit": "unknown"
                    },
                    "time_high": {
                        "name": "time_high",
                        "unit": "unknown"
                    },
                    "time_low": {
                        "name": "time_low",
                        "unit": "unknown"
                    },
                    "time_no_result": {
                        "name": "time_no_result",
                        "unit": "unknown"
                    },
                    "time_reported": {
                        "name": "time_reported",
                        "unit": "unknown"
                    },
                    "time_total": {
                        "name": "time_total",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_account_server_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "swift_account_server_api_local_status--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_account_server_api_local_status\",\"filename\":\"swift_account_server_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"swift_account_server_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_account_server_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "swift_account_server",
                        "--path",
                        "/healthcheck",
                        "IP_ADDRESS",
                        "6002"
                    ],
                    "file": "service_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "swift_account_server_api_local_response_time": {
                        "name": "swift_account_server_api_local_response_time",
                        "unit": "ms"
                    },
                    "swift_account_server_api_local_status": {
                        "name": "swift_account_server_api_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_async_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "swift_async_avg_check--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_async_avg_check\",\"filename\":\"swift_async_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"async_avg\"] > 25.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Async Pending Average above threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "swift_async_failure_check--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_async_failure_check\",\"filename\":\"swift_async_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"async_failed\"] > 5.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Async Pending Failure Percentage Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_async_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "async-pendings"
                    ],
                    "file": "swift-recon.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "async_avg": {
                        "name": "async_avg",
                        "unit": "unknown"
                    },
                    "async_failed": {
                        "name": "async_failed",
                        "unit": "unknown"
                    },
                    "async_high": {
                        "name": "async_high",
                        "unit": "unknown"
                    },
                    "async_low": {
                        "name": "async_low",
                        "unit": "unknown"
                    },
                    "async_no_result": {
                        "name": "async_no_result",
                        "unit": "unknown"
                    },
                    "async_reported": {
                        "name": "async_reported",
                        "unit": "unknown"
                    },
                    "async_total": {
                        "name": "async_total",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_container_replication_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "swift_container_replication_check--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_container_replication_check\",\"filename\":\"swift_container_replication_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"time_failed\"] > 5.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Container Replication Failure Percentage Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_container_replication_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "--ring-type",
                        "container",
                        "replication"
                    ],
                    "file": "swift-recon.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "attempted_avg": {
                        "name": "attempted_avg",
                        "unit": "unknown"
                    },
                    "attempted_failed": {
                        "name": "attempted_failed",
                        "unit": "unknown"
                    },
                    "attempted_high": {
                        "name": "attempted_high",
                        "unit": "unknown"
                    },
                    "attempted_low": {
                        "name": "attempted_low",
                        "unit": "unknown"
                    },
                    "attempted_no_result": {
                        "name": "attempted_no_result",
                        "unit": "unknown"
                    },
                    "attempted_reported": {
                        "name": "attempted_reported",
                        "unit": "unknown"
                    },
                    "attempted_total": {
                        "name": "attempted_total",
                        "unit": "unknown"
                    },
                    "failure_avg": {
                        "name": "failure_avg",
                        "unit": "unknown"
                    },
                    "failure_failed": {
                        "name": "failure_failed",
                        "unit": "unknown"
                    },
                    "failure_high": {
                        "name": "failure_high",
                        "unit": "unknown"
                    },
                    "failure_low": {
                        "name": "failure_low",
                        "unit": "unknown"
                    },
                    "failure_no_result": {
                        "name": "failure_no_result",
                        "unit": "unknown"
                    },
                    "failure_reported": {
                        "name": "failure_reported",
                        "unit": "unknown"
                    },
                    "failure_total": {
                        "name": "failure_total",
                        "unit": "unknown"
                    },
                    "success_avg": {
                        "name": "success_avg",
                        "unit": "unknown"
                    },
                    "success_failed": {
                        "name": "success_failed",
                        "unit": "unknown"
                    },
                    "success_high": {
                        "name": "success_high",
                        "unit": "unknown"
                    },
                    "success_low": {
                        "name": "success_low",
                        "unit": "unknown"
                    },
                    "success_no_result": {
                        "name": "success_no_result",
                        "unit": "unknown"
                    },
                    "success_reported": {
                        "name": "success_reported",
                        "unit": "unknown"
                    },
                    "success_total": {
                        "name": "success_total",
                        "unit": "unknown"
                    },
                    "time_avg": {
                        "name": "time_avg",
                        "unit": "unknown"
                    },
                    "time_failed": {
                        "name": "time_failed",
                        "unit": "unknown"
                    },
                    "time_high": {
                        "name": "time_high",
                        "unit": "unknown"
                    },
                    "time_low": {
                        "name": "time_low",
                        "unit": "unknown"
                    },
                    "time_no_result": {
                        "name": "time_no_result",
                        "unit": "unknown"
                    },
                    "time_reported": {
                        "name": "time_reported",
                        "unit": "unknown"
                    },
                    "time_total": {
                        "name": "time_total",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_container_server_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "swift_container_server_api_local_status--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_container_server_api_local_status\",\"filename\":\"swift_container_server_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"swift_container_server_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_container_server_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "swift_container_server",
                        "--path",
                        "/healthcheck",
                        "IP_ADDRESS",
                        "6001"
                    ],
                    "file": "service_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "swift_container_server_api_local_response_time": {
                        "name": "swift_container_server_api_local_response_time",
                        "unit": "ms"
                    },
                    "swift_container_server_api_local_status": {
                        "name": "swift_container_server_api_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_md5_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "swift_conf_md5_check--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_conf_md5_check\",\"filename\":\"swift_md5_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"swift_conf_errors\"] > 0) {\n    return new AlarmStatus(CRITICAL, \"Swift conf md5sum Inconsistent\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "swift_ring_md5_check--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_ring_md5_check\",\"filename\":\"swift_md5_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"ring_errors\"] > 0) {\n    return new AlarmStatus(CRITICAL, \"Ring md5sum Inconsistent\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_md5_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "md5"
                    ],
                    "file": "swift-recon.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "ring_errors": {
                        "name": "ring_errors",
                        "unit": "unknown"
                    },
                    "ring_success": {
                        "name": "ring_success",
                        "unit": "unknown"
                    },
                    "ring_total": {
                        "name": "ring_total",
                        "unit": "unknown"
                    },
                    "swift_conf_errors": {
                        "name": "swift_conf_errors",
                        "unit": "unknown"
                    },
                    "swift_conf_success": {
                        "name": "swift_conf_success",
                        "unit": "unknown"
                    },
                    "swift_conf_total": {
                        "name": "swift_conf_total",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_object_replication_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "swift_object_replication_check--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_object_replication_check\",\"filename\":\"swift_object_replication_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"time_failed\"] > 5.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Object Replication Failure Percentage Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_object_replication_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "--ring-type",
                        "object",
                        "replication"
                    ],
                    "file": "swift-recon.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "time_avg": {
                        "name": "time_avg",
                        "unit": "unknown"
                    },
                    "time_failed": {
                        "name": "time_failed",
                        "unit": "unknown"
                    },
                    "time_high": {
                        "name": "time_high",
                        "unit": "unknown"
                    },
                    "time_low": {
                        "name": "time_low",
                        "unit": "unknown"
                    },
                    "time_no_result": {
                        "name": "time_no_result",
                        "unit": "unknown"
                    },
                    "time_reported": {
                        "name": "time_reported",
                        "unit": "unknown"
                    },
                    "time_total": {
                        "name": "time_total",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_object_server_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "swift_object_server_api_local_status--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_object_server_api_local_status\",\"filename\":\"swift_object_server_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"swift_object_server_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_object_server_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "swift_object_server",
                        "--path",
                        "/healthcheck",
                        "IP_ADDRESS",
                        "6000"
                    ],
                    "file": "service_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "swift_object_server_api_local_response_time": {
                        "name": "swift_object_server_api_local_response_time",
                        "unit": "ms"
                    },
                    "swift_object_server_api_local_status": {
                        "name": "swift_object_server_api_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_proxy_server_check--AIO_swift_proxy_container-UID": {
                "active_suppressions": [],
                "alarms": {
                    "swift_proxy_server_api_local_status--AIO_swift_proxy_container-UID": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_proxy_server_api_local_status\",\"filename\":\"swift_proxy_server_check--AIO_swift_proxy_container-UID.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"swift_proxy_server_api_local_status\"] != 1) {\n    return new AlarmStatus(CRITICAL, \"API unavailable\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_proxy_server_check--AIO_swift_proxy_container-UID.yaml\"}",
                "details": {
                    "args": [
                        "swift_proxy_server",
                        "--path",
                        "/healthcheck",
                        "IP_ADDRESS",
                        "8080"
                    ],
                    "file": "service_api_local_check.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "swift_proxy_server_api_local_response_time": {
                        "name": "swift_proxy_server_api_local_response_time",
                        "unit": "ms"
                    },
                    "swift_proxy_server_api_local_status": {
                        "name": "swift_proxy_server_api_local_status",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            },
            "swift_quarantine_check--AIO": {
                "active_suppressions": [],
                "alarms": {
                    "swift_quarantine_account_avg--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_quarantine_account_avg\",\"filename\":\"swift_quarantine_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"accounts_avg\"] > 25.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Account Quarantine Average Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "swift_quarantine_account_failed--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_quarantine_account_failed\",\"filename\":\"swift_quarantine_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"accounts_failed\"] > 5.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Account Quarantine Percentage Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "swift_quarantine_container_avg--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_quarantine_container_avg\",\"filename\":\"swift_quarantine_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"containers_avg\"] > 25.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Container Quarantine Average Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "swift_quarantine_container_failed--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_quarantine_container_failed\",\"filename\":\"swift_quarantine_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"containers_failed\"] > 5.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Container Quarantine Percentage Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "swift_quarantine_object_avg--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_quarantine_object_avg\",\"filename\":\"swift_quarantine_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"objects_avg\"] > 25.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Object Quarantine Average Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    },
                    "swift_quarantine_object_failed--AIO": {
                        "active_suppressions": [],
                        "confd_name": "{\"alarm\":\"swift_quarantine_object_failed\",\"filename\":\"swift_quarantine_check--AIO.yaml\"}",
                        "criteria": ":set consecutiveCount=3\nif (metric[\"objects_failed\"] > 5.0) {\n    return new AlarmStatus(CRITICAL, \"Swift Object Quarantine Percentage Above Threshold\");\n}\n",
                        "disabled": false,
                        "metadata": null,
                        "scheduled_suppressions": []
                    }
                },
                "confd_name": "{\"check\":\"default\",\"filename\":\"swift_quarantine_check--AIO.yaml\"}",
                "details": {
                    "args": [
                        "quarantine"
                    ],
                    "file": "swift-recon.py"
                },
                "disabled": false,
                "metadata": null,
                "metrics": {
                    "accounts_avg": {
                        "name": "accounts_avg",
                        "unit": "unknown"
                    },
                    "accounts_failed": {
                        "name": "accounts_failed",
                        "unit": "unknown"
                    },
                    "accounts_high": {
                        "name": "accounts_high",
                        "unit": "unknown"
                    },
                    "accounts_low": {
                        "name": "accounts_low",
                        "unit": "unknown"
                    },
                    "accounts_no_result": {
                        "name": "accounts_no_result",
                        "unit": "unknown"
                    },
                    "accounts_reported": {
                        "name": "accounts_reported",
                        "unit": "unknown"
                    },
                    "accounts_total": {
                        "name": "accounts_total",
                        "unit": "unknown"
                    },
                    "containers_avg": {
                        "name": "containers_avg",
                        "unit": "unknown"
                    },
                    "containers_failed": {
                        "name": "containers_failed",
                        "unit": "unknown"
                    },
                    "containers_high": {
                        "name": "containers_high",
                        "unit": "unknown"
                    },
                    "containers_low": {
                        "name": "containers_low",
                        "unit": "unknown"
                    },
                    "containers_no_result": {
                        "name": "containers_no_result",
                        "unit": "unknown"
                    },
                    "containers_reported": {
                        "name": "containers_reported",
                        "unit": "unknown"
                    },
                    "containers_total": {
                        "name": "containers_total",
                        "unit": "unknown"
                    },
                    "objects_avg": {
                        "name": "objects_avg",
                        "unit": "unknown"
                    },
                    "objects_failed": {
                        "name": "objects_failed",
                        "unit": "unknown"
                    },
                    "objects_high": {
                        "name": "objects_high",
                        "unit": "unknown"
                    },
                    "objects_low": {
                        "name": "objects_low",
                        "unit": "unknown"
                    },
                    "objects_no_result": {
                        "name": "objects_no_result",
                        "unit": "unknown"
                    },
                    "objects_reported": {
                        "name": "objects_reported",
                        "unit": "unknown"
                    },
                    "objects_total": {
                        "name": "objects_total",
                        "unit": "unknown"
                    }
                },
                "monitoring_zones_poll": null,
                "period": 60,
                "scheduled_suppressions": [],
                "target_alias": null,
                "target_hostname": null,
                "target_resolver": null,
                "timeout": 30,
                "type": "agent.plugin"
            }
        },
        "ip_addresses": {
            "access_ip0_v4": "IP_ADDRESS",
            "access_ip1_v6": "IP_ADDRESS",
            "private0_v4": "IP_ADDRESS",
            "public0_v4": "IP_ADDRESS",
            "public1_v6": "IP_ADDRESS"
        },
        "managed": false,
        "metadata": null,
        "scheduled_suppressions": []
    }
}
